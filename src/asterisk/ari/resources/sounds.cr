#------------------------------------------------------------------------------
#
#  WARNING !
#
#  This is a generated file. DO NOT EDIT THIS FILE! Your changes will
#  be lost the next time this file is regenerated.
#
#  This file was generated using ctiapps/asterisk crystal shard from the
#  Asterisk PBX version 16.5.0.
#
#------------------------------------------------------------------------------

module Asterisk
  class ARI
    class Sounds < Resource
      # List all sounds.
      #
      # Arguments:
      # - `lang` - lookup sound for a specific language.
      #   - Required: false,
      #   - Allow multiple (comma-separated list): ,
      #   ARI (http-client) related:
      #   - http request type: query,
      #   - param name: lang,
      #
      # - `format` - lookup sound in a specific format.
      #   - Required: false,
      #   - Allow multiple (comma-separated list): ,
      #   ARI (http-client) related:
      #   - http request type: query,
      #   - param name: format,
      #   - endpoint (get): /sounds
      def self.list(lang : String? = nil, format : String? = nil) : Array(Sounds::Sound)
        # Optional parameters
        params = HTTP::Params.encode({} of String => String)
        params += "&" + HTTP::Params.encode({"lang" => lang}) if lang
        params += "&" + HTTP::Params.encode({"format" => format}) if format

        client.get "/sounds?" + params
      end

      # Get a sound's details.
      #
      # Arguments:
      # - `sound_id` - sound's id.
      #   - Required: true,
      #   - Allow multiple (comma-separated list): false,
      #   ARI (http-client) related:
      #   - http request type: path,
      #   - param name: soundId,
      #   - endpoint (get): /sounds/{soundId}
      def self.get(sound_id : String) : Sounds::Sound
        client.get "/sounds/#{sound_id}"
      end
    end
  end
end
