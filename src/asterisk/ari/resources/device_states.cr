#------------------------------------------------------------------------------
#
#  WARNING !
#
#  This is a generated file. DO NOT EDIT THIS FILE! Your changes will
#  be lost the next time this file is regenerated.
#
#  This file was generated using ctiapps/asterisk crystal shard from the
#  Asterisk PBX version 16.5.0.
#
#------------------------------------------------------------------------------

module Asterisk
  class ARI
    class DeviceStates < Resource
      # List all ARI controlled device states.
      def self.list : Array(DeviceStates::DeviceState)
        client.get "/deviceStates"
      end

      # Retrieve the current state of a device.
      #
      # Arguments:
      # - `device_name` - name of the device.
      #   - Required: true,
      #   - Allow multiple (comma-separated list): false,
      #   ARI (http-client) related:
      #   - http request type: path,
      #   - param name: deviceName,
      #   - endpoint (get): /deviceStates/{deviceName}
      def self.get(device_name : String) : DeviceStates::DeviceState
        client.get "/deviceStates/#{device_name}"
      end

      # Change the state of a device controlled by ARI. (Note - implicitly creates the device state).
      #
      # Arguments:
      # - `device_name` - name of the device.
      #   - Required: true,
      #   - Allow multiple (comma-separated list): false,
      #   ARI (http-client) related:
      #   - http request type: path,
      #   - param name: deviceName,
      #
      # - `device_state` - device state value.
      #   - Required: true,
      #   - Allow multiple (comma-separated list): false,
      #   ARI (http-client) related:
      #   - http request type: query,
      #   - param name: deviceState,
      #   - endpoint (put): /deviceStates/{deviceName}
      #
      # Error responses:
      # - 404 - Device name is missing
      # - 409 - Uncontrolled device specified
      def self.update(device_name : String, device_state : String)
        params = HTTP::Params.encode({"deviceState" => device_state})
        response = client.put "/deviceStates/#{device_name}?" + params
      end

      # Destroy a device-state controlled by ARI.
      #
      # Arguments:
      # - `device_name` - name of the device.
      #   - Required: true,
      #   - Allow multiple (comma-separated list): false,
      #   ARI (http-client) related:
      #   - http request type: path,
      #   - param name: deviceName,
      #   - endpoint (delete): /deviceStates/{deviceName}
      #
      # Error responses:
      # - 404 - Device name is missing
      # - 409 - Uncontrolled device specified
      def self.delete(device_name : String)
        response = client.delete "/deviceStates/#{device_name}"
      end
    end
  end
end
